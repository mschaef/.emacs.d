;;;;; vCalc and vcsh related scheme indent paramaters

(put '%early-dbind 'scheme-indent-function 2)
(put '%early-define 'scheme-indent-function 1)
(put '%early-defmacro 'scheme-indent-function 1)
(put '%lambda 'scheme-indent-function 2)
(put 'awhen 'scheme-indent-function 1)
(put 'awhile 'scheme-indent-function 1)
(put 'bench-repeat  'scheme-indent-function 1)
(put 'bind-if-match 'scheme-indent-function 2)
(put 'call-with-compiler-tracing 'scheme-indent-function 3)
(put 'check-for 'scheme-indent-function 1)
(put 'cond-match 'scheme-indent-function 1)
(put 'case 'scheme-indent-function 1)
(put 'catch 'scheme-indent-function 1)
(put 'dbind 'scheme-indent-function 2)
(put 'dbind-if-match 'scheme-indent-function 2)
(put 'define-integration 'scheme-indent-function 1)
(put 'do-memlog-recs 'scheme-indent-function 1)
(put 'dohash 'scheme-indent-function 1)
(put 'doiterate 'scheme-indent-function 1)
(put 'dolist 'scheme-indent-function 1)
(put 'dotimes 'scheme-indent-function 1)
(put 'dovec 'scheme-indent-function 1)
(put 'dynamic-let 'scheme-indent-function 1)
(put 'etypecase 'scheme-indent-function 1)
(put 'eval-when 'scheme-indent-function 1)
(put 'handler-bind 'scheme-indent-function 1)
(put 'list-let 'scheme-indent-function 2)
(put 'locally-capture 'scheme-indent-function 1)
(put 'mvbind 'scheme-indent-function 2)
(put 'repeat 'scheme-indent-function 1)
(put 'test-case/execution-order 'scheme-indent-function 1)
(put 'typecase 'scheme-indent-function 1)
(put 'unless 'scheme-indent-function 1)
(put 'values-bind 'scheme-indent-function 2)
(put 'when 'scheme-indent-function 1)
(put 'while 'scheme-indent-function 1)
(put 'with-fasl-file 'scheme-indent-function 2)
(put 'with-gensyms 'scheme-indent-function 1)
(put 'with-global-environment 'scheme-indent-function 1)
(put 'with-port 'scheme-indent-function 2)
(put 'with-temporary-file 'scheme-indent-function 2)
(put 'with-unexpected-escape-handler 'scheme-indent-function 1)

(provide 'vcsh)
